diff --git a/haskell/cabal.bzl b/haskell/cabal.bzl
index d1e0133e..9161ca57 100644
--- a/haskell/cabal.bzl
+++ b/haskell/cabal.bzl
@@ -88,6 +88,12 @@ def _cabal_tool_flag(tool):
 def _make_path(hs, binaries):
     return ":".join([binary.dirname for binary in binaries.to_list()])
 
+def _skip_ghc_bindist(path):
+    if path.find("rules_haskell_ghc_windows_amd64") != -1:
+        return None
+    else:
+        return path
+
 def _prepare_cabal_inputs(hs, cc, dep_info, cc_info, component, package_id, tool_inputs, tool_input_manifests, cabal, setup, srcs, flags, cabal_wrapper, package_database):
     """Compute Cabal wrapper, arguments, inputs."""
     with_profiling = is_profiling_enabled(hs)
@@ -118,7 +124,7 @@ def _prepare_cabal_inputs(hs, cc, dep_info, cc_info, component, package_id, tool
     args.add("--flags=" + " ".join(flags))
     args.add("--")
     args.add_all(package_databases, map_each = _dirname, format_each = "--package-db=%s")
-    args.add_all(extra_include_dirs, format_each = "--extra-include-dirs=%s")
+    args.add_all(extra_include_dirs, map_each = _skip_ghc_bindist, format_each = "--extra-include-dirs=%s")
     args.add_all(extra_lib_dirs, format_each = "--extra-lib-dirs=%s", uniquify = True)
     if with_profiling:
         args.add("--enable-profiling")
diff --git a/haskell/private/cc_wrapper_windows.sh.tpl b/haskell/private/cc_wrapper_windows.sh.tpl
index d4bc6756..0d5279f2 100644
--- a/haskell/private/cc_wrapper_windows.sh.tpl
+++ b/haskell/private/cc_wrapper_windows.sh.tpl
@@ -25,6 +25,16 @@
 # shellcheck disable=SC1090
 
 set -euo pipefail
+DEBUG="/c/users/admin/daml/cc_wrapper.log"
+debug() {
+  return
+  echo "$@" >> "$DEBUG"
+}
+debug "======================================================================"
+debug "CC_WRAPPER $0"
+debug "PWD $PWD"
+for arg in $@; do debug "ARG $arg"; done
+debug "----------------------------------------------------------------------"
 
 # ----------------------------------------------------------
 # Find compiler
@@ -103,6 +113,7 @@ unquote_arg() {
 
 add_arg() {
     quote_arg "$1" >> "$RESPONSE_FILE"
+    debug "ARG: $1"
 }
 
 # ----------------------------------------------------------
